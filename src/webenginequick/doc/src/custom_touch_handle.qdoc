/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype CustomTouchHandle
    \inqmlmodule QtWebEngine
    \since QtWebEngine 6.4

    \brief Data class for representing the touch handle QML delegate.

    The handle's position, opacity, and visibility are updated automatically.
    The delegate should be a QML Item or any QML type which inherits it.

    The following code uses a custom touch handle delegate:

    \code
    WebEngineView {
    // ...
        touchHandleDelegate: Rectangle {
            color: "red"
        }
        // ...
    }
    \endcode

    \note The bounding box which propagates the touch event is provided by
    Chromium and the text selection can be moved even if there is no handle drawn.
*/
